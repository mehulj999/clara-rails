# docker-compose.yml
services:
  db:
    image: postgres:14-alpine
    # env_file:
    #   - ./.env.docker
    environment:
      POSTGRES_USER: mehul
      POSTGRES_PASSWORD: mehulpw
      POSTGRES_DB: api_development
      DEVISE_JWT_SECRET_KEY: 1234567890abcdef1234567890abcdef
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U mehul -d api_development -h 127.0.0.1"]
      interval: 3s
      timeout: 3s
      retries: 10

  api:
    build: ./api
    environment:
      RAILS_ENV: development
      RACK_ENV: development
      DATABASE_URL: postgresql://mehul:mehulpw@db:5432/api_development
      TEST_DATABASE_URL: postgresql://mehul:mehulpw@db:5432/api_test
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./api:/app
    ports:
      - "3000:3000"
    command: ["sh","-lc","bundle exec rails db:prepare && bundle exec rails s -b 0.0.0.0 -p 3000"]

  web:
    build: ./web
    volumes:
      - ./web:/app
      - /app/node_modules
    ports:
      - "5174:5174"
    command: ["sh","-lc","npm install && npm run dev -- --host"]

volumes:
  pgdata:
